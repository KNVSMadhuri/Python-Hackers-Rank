#dealing with dictionaries
d = {}
a=int(input()) 
for i in range(a): 
    b = input() 
    c = b.split(" ") 
    su = float(c[1]) + float(c[2]) + float(c[3]) 
    av = float(su/3) 
    d[c[0]] = av
    e = input() 
print ('%.2f' % d[e])


#Printing Style
from  __future__  import print_function
import sys
n = int(input())
for i in range(1,n+1):
    print(i,sep=' ', end='', file=sys.stdout)
##dealing with commands append, remove,pop,runtime
n = input()
l = []
for _ in range(n):
    s = input().split()
    cmd = s[0]
    args = s[1:]
    if cmd !="print":
        cmd += "("+ ",".join(args) +")"
        eval("l."+cmd)
    else:
        print(l)
#Dynamically assigning variables:
raw_input()
print(hash(tuple(map(int, raw_input().strip().split(" ")))))

#using lexicographic variables:
x, y, z, n = (int(input()) for _ in range(4))
print ([[a,b,c] for a in range(x+1) for b in range(y+1) for c in range(z+1) if a + b + c != n ])

#Finding second largest number:

raw_input()
l = set(list(map(int,raw_input().strip().split(" "))))
m = sorted(l,reverse=True)[1]
print(m)

#Finding number of lowest scorers with same name

n = int(raw_input())
marksheet = [[raw_input(), float(raw_input())] for _ in range(n)]
second_highest = sorted([marks for name,marks in marksheet])[1]
print('\n'.join([a for a,b in sorted(marksheet) if b == second_highest]))

OR

students = sorted([[raw_input(), float(input())] for _ in range(int(input()))])
secndLow = sorted(list(set(grade for [_, grade] in students)))[1]
print ("\n".join( name for [name, grade] in students if grade == secndLow))

#t1-t2 dynamically timedelta problem
import re
def parseString(s):
    (x1,x2) = re.findall('(^.*) ([+-]\d{4})',s)[0]
    tz = x2[0] + str(int(x2[1:3])*3600 + int(x2[3:5])*60)
    ts = time.strptime(x1,"%a %d %b %Y %H:%M:%S")
    return time.mktime(ts) - eval(tz)
for i in range(int(input())):
    print(int(abs(parseString(input()) - parseString(input()))))
    
#Swaping Cases (Changing upper case to lowercase lowercase to uppercase)
a = raw_input()
b = a.swapcase()
print(b)

#splitting and join the string
a = input()
b = a.split(' ')
c = '-'.join(b)
print(c)

#Mutations in a string(we can change the string)
s = raw_input()
i,c = raw_input().split()
print

#Count the occurence of substring in a string
Str, key, count = input(), input(), 0
for c in range(len(Str)): 
    if Str[c:c+len(key)] == key: 
        count += 1
print(count)

# Enter your code here. Read input from STDIN. Print output to STDOUT
#alphanumeric characters, alphabetical characters, digits, lowercase and uppercase characters.
str = raw_input()
print(any(c.isalnum()  for c in str))
print(any(c.isalpha() for c in str))
print(any(c.isdigit() for c in str))
print(any(c.islower() for c in str))
print(any(c.isupper() for c in str))

#textwrap
import textwrap
st,wid = input(),int(input())
print(textwrap.fill(st,wid))

#Formatting
# Enter your code here. Read input from STDIN. Print output to STDOUT
n = int(input())
width = len("{0:b}".format(n))
for i in range(1,n+1):
    print("{0:{width}d} {0:{width}o} {0:{width}X} {0:{width}b}".format(i, width=width))

#captilize each word in a sentence. if u use title() it fails near '3g'
print(" ".join((s.capitalize() for s in input().strip().split(" "))))
    
print(" ".join((s.capitalize() for s in input().strip().split(" "))))

s = raw_input()

vowels = 'AEIOU'

kevsc = 0
stusc = 0
for i in range(len(s)):
    if s[i] in vowels:
        kevsc += (len(s)-i)
    else:
        stusc += (len(s)-i)

if kevsc > stusc:
    print "Kevin", kevsc
elif kevsc < stusc:
    print "Stuart", stusc
else:
    print "Draw"
